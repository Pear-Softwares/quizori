// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  providerId         String
  refresh_token      String?
  access_token       String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  updatedAt          DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@unique([provider, providerAccountId])
  @@index([userId], name: "userid")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId], name: "userid")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Game          game[]
}

enum GameType {
  mcq
  open_ended
}

model game {
  
  id          String     @id @default(cuid())
  userId      String
  timeStarted DateTime
  topic       String
  timeEnded   DateTime
  gameType    GameType
  user        User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  question    Question[]

  @@index([userId], name: "userId")
}

model Question {
  id                String   @id @default(cuid())
  question          String
  answer            String
  gameId            String
  options           Json?
  percentageCorrect Float?
  questionType      GameType
  userAnswer        String?
isCorrect         Boolean?
  game game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([gameId], name: "gameId")
}

model topic_count {
  id    Int    @id @default(sequence())
  topic String
  count Int
}
